basePath: /api/v1
definitions:
  models.AuthData:
    properties:
      message:
        example: Authentication successful
        type: string
      token:
        example: ya29.a0AfH6SMC...
        type: string
    type: object
  models.AuthSuccessResponse:
    properties:
      data:
        $ref: '#/definitions/models.AuthData'
      request_id:
        example: req_8n3mN9pQ2x
        type: string
      timestamp:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  models.BadRequestErrorDetail:
    properties:
      code:
        example: INVALID_REQUEST
        type: string
      message:
        example: Authorization code is required
        type: string
      request_id:
        example: req_8n3mN9pQ2x
        type: string
      timestamp:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  models.BadRequestErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.BadRequestErrorDetail'
    type: object
  models.ErrorDetail:
    properties:
      code:
        example: VALIDATION_FAILED
        type: string
      details:
        additionalProperties: {}
        type: object
      message:
        example: The request contains 2 validation errors
        type: string
      request_id:
        example: req_8n3mN9pQ2x
        type: string
      timestamp:
        example: "2023-12-01T10:30:00Z"
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/models.ErrorDetail'
    type: object
host: localhost:8080
info:
  contact: {}
  description: A RESTful API built with Go and Fiber
  title: Pitstop API
  version: "1.0"
paths:
  /auth:
    get:
      description: Redirects user to Google OAuth for authentication
      responses:
        "303":
          description: Redirects to Google OAuth
          headers:
            X-Request-ID:
              description: Request ID for tracing
              type: string
      summary: Start OAuth authentication
      tags:
      - Auth
  /auth/callback:
    get:
      description: Handles OAuth callback and exchanges authorization code for access
        token
      parameters:
      - description: Authorization code from OAuth provider
        in: query
        name: code
        required: true
        type: string
      - description: State parameter for CSRF protection
        in: query
        name: state
        required: true
        type: string
      responses:
        "200":
          description: Authentication successful with access token
          headers:
            X-Request-ID:
              description: Request ID for tracing
              type: string
          schema:
            $ref: '#/definitions/models.AuthSuccessResponse'
        "400":
          description: Bad request - missing code or invalid state
          headers:
            X-Request-ID:
              description: Request ID for tracing
              type: string
          schema:
            $ref: '#/definitions/models.BadRequestErrorResponse'
        "503":
          description: External service error - OAuth provider failure
          headers:
            X-Request-ID:
              description: Request ID for tracing
              type: string
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: OAuth callback handler
      tags:
      - Auth
  /posts:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all posts
      produces:
      - application/json
      responses:
        "200":
          description: List of posts
          schema:
            items:
              type: string
            type: array
      summary: Get all posts
      tags:
      - posts
swagger: "2.0"
